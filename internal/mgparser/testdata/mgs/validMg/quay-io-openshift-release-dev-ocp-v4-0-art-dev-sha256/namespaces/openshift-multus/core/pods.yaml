---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:40:17Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 55c7bbf8f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b51f2437-81f7-4fef-bd4f-1bb6356f0a8a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:40:51Z"
    name: multus-2fxcb
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: b51f2437-81f7-4fef-bd4f-1bb6356f0a8a
    resourceVersion: "20736"
    uid: 707183e1-e3a9-4271-b8a0-cde8e27cbdea
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-1.openshift.local
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k6pf9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: worker-1.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-k6pf9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9b304f05b9b5acbb7e43acd20ee65bbf9200baeaf75299edbb18bd8fa7a23264
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:40:51Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:40:13Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 55c7bbf8f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b51f2437-81f7-4fef-bd4f-1bb6356f0a8a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:40:48Z"
    name: multus-4qflw
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: b51f2437-81f7-4fef-bd4f-1bb6356f0a8a
    resourceVersion: "20678"
    uid: 05421fea-7489-45a1-939f-2b8271d92f48
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-0.openshift.local
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hk82q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: worker-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-hk82q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://77aaeb79c2142017c2d05d4b31979df007b06d25409501316691b06fc2c44063
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:40:47Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:25:21Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 55c7bbf8f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b51f2437-81f7-4fef-bd4f-1bb6356f0a8a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:26:53Z"
    name: multus-8c65f
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: b51f2437-81f7-4fef-bd4f-1bb6356f0a8a
    resourceVersion: "9424"
    uid: 91567783-609f-412f-9775-58e30cc941bf
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-2.openshift.local
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fsrmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: master-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-fsrmb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b9d2dde122ff9b798382bade834ae4a7a1b3f8e1da4500a729c0e1022af8668a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState:
        terminated:
          containerID: cri-o://77294cb86efbeb7777f9aefe205bac53b09ce161f86f19dc46621c9d888a4610
          exitCode: 2
          finishedAt: "2025-02-03T09:26:51Z"
          message: |
            :"eth0" Args:"IgnoreUnknown=1;K8S_POD_NAMESPACE=openshift-cluster-storage-operator;K8S_POD_NAME=csi-snapshot-controller-7d465f946d-lfnh4;K8S_POD_INFRA_CONTAINER_ID=1c18ce9b70a7b375f0311d09a0de08c10c2075288603172a6c91efd5eeb68e56;K8S_POD_UID=c4e1a3dd-a140-48c0-8402-42148ae4ca5d" Path:""
            2025-02-03T09:26:38Z [verbose] Add: openshift-cluster-storage-operator:csi-snapshot-controller-7d465f946d-lfnh4:c4e1a3dd-a140-48c0-8402-42148ae4ca5d:ovn-kubernetes(ovn-kubernetes):eth0 {"cniVersion":"0.4.0","interfaces":[{"name":"1c18ce9b70a7b37","mac":"a2:ef:bd:2c:a6:a7"},{"name":"eth0","mac":"0a:58:0a:82:00:09","sandbox":"/var/run/netns/d4a6bcc8-a230-42b4-90bf-1231d83e0d95"}],"ips":[{"version":"4","interface":1,"address":"127.0.0.1/23","gateway":"127.0.0.1"}],"dns":{}}
            I0203 09:26:38.762987    8313 event.go:364] Event(v1.ObjectReference{Kind:"Pod", Namespace:"openshift-cluster-storage-operator", Name:"csi-snapshot-controller-7d465f946d-lfnh4", UID:"c4e1a3dd-a140-48c0-8402-42148ae4ca5d", APIVersion:"v1", ResourceVersion:"8630", FieldPath:""}): type: 'Normal' reason: 'AddedInterface' Add eth0 [127.0.0.1/23] from ovn-kubernetes
            2025-02-03T09:26:38Z [verbose] ADD finished CNI request ContainerID:"1c18ce9b70a7b375f0311d09a0de08c10c2075288603172a6c91efd5eeb68e56" Netns:"/var/run/netns/d4a6bcc8-a230-42b4-90bf-1231d83e0d95" IfName:"eth0" Args:"IgnoreUnknown=1;K8S_POD_NAMESPACE=openshift-cluster-storage-operator;K8S_POD_NAME=csi-snapshot-controller-7d465f946d-lfnh4;K8S_POD_INFRA_CONTAINER_ID=1c18ce9b70a7b375f0311d09a0de08c10c2075288603172a6c91efd5eeb68e56;K8S_POD_UID=c4e1a3dd-a140-48c0-8402-42148ae4ca5d" Path:"", result: "{\"Result\":{\"cniVersion\":\"1.1.0\",\"interfaces\":[{\"mac\":\"a2:ef:bd:2c:a6:a7\",\"name\":\"1c18ce9b70a7b37\"},{\"mac\":\"0a:58:0a:82:00:09\",\"name\":\"eth0\",\"sandbox\":\"/var/run/netns/d4a6bcc8-a230-42b4-90bf-1231d83e0d95\"}],\"ips\":[{\"address\":\"127.0.0.1/23\",\"gateway\":\"127.0.0.1\",\"interface\":1}]}}", err: <nil>
            2025-02-03T09:26:51Z [verbose] readiness indicator file is gone. restart multus-daemon
          reason: Error
          startedAt: "2025-02-03T09:25:35Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:26:52Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:40:13Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: c74db9d7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b8182e8-5514-4e94-9ef4-413f37e0790c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:12Z"
    name: multus-additional-cni-plugins-2hz8k
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 2b8182e8-5514-4e94-9ef4-413f37e0790c
    resourceVersion: "21465"
    uid: aab86273-da05-4c4e-b64f-d57486840d3d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-0.openshift.local
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5xw5
        readOnly: true
    nodeName: worker-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-j5xw5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://664733fc924016fe5839d45fb73c004459e80698fb667a45f31421a1c52b6476
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:11Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    initContainerStatuses:
    - containerID: cri-o://d5ad42bf85e404e02a945825068ec5169dd84424ed96499bee9d1de1fadb618f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d5ad42bf85e404e02a945825068ec5169dd84424ed96499bee9d1de1fadb618f
          exitCode: 0
          finishedAt: "2025-02-03T09:40:47Z"
          reason: Completed
          startedAt: "2025-02-03T09:40:47Z"
    - containerID: cri-o://54a80443cb4434b6b3ec93f979f419c8d83e43e2c40e05fc04c9ff14b9b9d0a2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://54a80443cb4434b6b3ec93f979f419c8d83e43e2c40e05fc04c9ff14b9b9d0a2
          exitCode: 0
          finishedAt: "2025-02-03T09:40:54Z"
          reason: Completed
          startedAt: "2025-02-03T09:40:54Z"
    - containerID: cri-o://499d4b2d10426fed0ff728dbfa7b38c3bbabdc76a8cccd510decd146ff023217
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://499d4b2d10426fed0ff728dbfa7b38c3bbabdc76a8cccd510decd146ff023217
          exitCode: 0
          finishedAt: "2025-02-03T09:40:57Z"
          reason: Completed
          startedAt: "2025-02-03T09:40:57Z"
    - containerID: cri-o://b2ec302bf197d5425317a51067981d83a924eff386329d4787689b904e450259
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b2ec302bf197d5425317a51067981d83a924eff386329d4787689b904e450259
          exitCode: 0
          finishedAt: "2025-02-03T09:41:00Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:00Z"
    - containerID: cri-o://e5e5780ab4c60af80c44782747b184209bd9c88b09cc9529d306cd8bcfd37742
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e5e5780ab4c60af80c44782747b184209bd9c88b09cc9529d306cd8bcfd37742
          exitCode: 0
          finishedAt: "2025-02-03T09:41:09Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:08Z"
    - containerID: cri-o://f1fb61a3df422f18d82963833e861a5ea89cde15b4444f078264a5c588abdcbf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f1fb61a3df422f18d82963833e861a5ea89cde15b4444f078264a5c588abdcbf
          exitCode: 0
          finishedAt: "2025-02-03T09:41:10Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:10Z"
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:25:21Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: c74db9d7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b8182e8-5514-4e94-9ef4-413f37e0790c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:25:58Z"
    name: multus-additional-cni-plugins-7nlzg
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 2b8182e8-5514-4e94-9ef4-413f37e0790c
    resourceVersion: "6385"
    uid: b8e9b5dd-b380-44b1-ac3a-1e3626173a8c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-0.openshift.local
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-86vq5
        readOnly: true
    nodeName: master-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-86vq5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://62f80bc2bca973daa2a29400d9040e57d09b283b3da61951fecb93e3f4e15255
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:25:57Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    initContainerStatuses:
    - containerID: cri-o://f92fb3d17e6d859eaf323866ffa6c74a380c4fc40c1d185f85a100a98b1e3c93
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f92fb3d17e6d859eaf323866ffa6c74a380c4fc40c1d185f85a100a98b1e3c93
          exitCode: 0
          finishedAt: "2025-02-03T09:25:26Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:26Z"
    - containerID: cri-o://840b52f23d13501fbfa8b942a00614f5095c73543bbdbda3d294e6e5c28ccab7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://840b52f23d13501fbfa8b942a00614f5095c73543bbdbda3d294e6e5c28ccab7
          exitCode: 0
          finishedAt: "2025-02-03T09:25:36Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:36Z"
    - containerID: cri-o://1234a4bd04aa65193feaa7dd402c0890e5ff218776ed3845971f3845f229f57b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://1234a4bd04aa65193feaa7dd402c0890e5ff218776ed3845971f3845f229f57b
          exitCode: 0
          finishedAt: "2025-02-03T09:25:42Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:42Z"
    - containerID: cri-o://d088fef69218e6d50ca65aadcd8b2aee10e64a4f956f0eab6d7fa1e9c18cee62
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d088fef69218e6d50ca65aadcd8b2aee10e64a4f956f0eab6d7fa1e9c18cee62
          exitCode: 0
          finishedAt: "2025-02-03T09:25:49Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:49Z"
    - containerID: cri-o://2d2a318c92cb794fc43e675696b0acba06d5f6a40bb8349b62b2ce95bfce993d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://2d2a318c92cb794fc43e675696b0acba06d5f6a40bb8349b62b2ce95bfce993d
          exitCode: 0
          finishedAt: "2025-02-03T09:25:56Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:56Z"
    - containerID: cri-o://fad0a65d028aa4ebb3332b121ffe72e75ec5f8ebb3f495d42435ec66066c533d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://fad0a65d028aa4ebb3332b121ffe72e75ec5f8ebb3f495d42435ec66066c533d
          exitCode: 0
          finishedAt: "2025-02-03T09:25:56Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:56Z"
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:25:21Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: c74db9d7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b8182e8-5514-4e94-9ef4-413f37e0790c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:26:01Z"
    name: multus-additional-cni-plugins-fdq79
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 2b8182e8-5514-4e94-9ef4-413f37e0790c
    resourceVersion: "6432"
    uid: 62b1af12-2c2d-4984-99f7-538e9ce1893f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-1.openshift.local
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kcfk
        readOnly: true
    nodeName: master-1.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-8kcfk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2ee142f7ebab1efe7e7ee85048956b24913013bff1b63ca703df4d516622f3c7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:26:00Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    initContainerStatuses:
    - containerID: cri-o://f6e0991d7aede340c700eec3a536ff95599c92d4d3fcb390625660ee3f660f07
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f6e0991d7aede340c700eec3a536ff95599c92d4d3fcb390625660ee3f660f07
          exitCode: 0
          finishedAt: "2025-02-03T09:25:26Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:26Z"
    - containerID: cri-o://225877be996aa7c47eb308238bff4afb2e6ac9bbc36fd0832817b69b3f5c559f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://225877be996aa7c47eb308238bff4afb2e6ac9bbc36fd0832817b69b3f5c559f
          exitCode: 0
          finishedAt: "2025-02-03T09:25:37Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:37Z"
    - containerID: cri-o://b0bdb81b33344e315746c95196462bfe921d298d7a1b98e8ed086b7a1eab01cf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b0bdb81b33344e315746c95196462bfe921d298d7a1b98e8ed086b7a1eab01cf
          exitCode: 0
          finishedAt: "2025-02-03T09:25:42Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:42Z"
    - containerID: cri-o://6117b59ab89beef1174be9eb2a1ea238703479466676f60ae38c65b547428fca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6117b59ab89beef1174be9eb2a1ea238703479466676f60ae38c65b547428fca
          exitCode: 0
          finishedAt: "2025-02-03T09:25:50Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:50Z"
    - containerID: cri-o://43ffc8ab7839e164368409f9493c258a3b622fb8ef30ed6a5eeb0a3aa7e8c28e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://43ffc8ab7839e164368409f9493c258a3b622fb8ef30ed6a5eeb0a3aa7e8c28e
          exitCode: 0
          finishedAt: "2025-02-03T09:25:58Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:58Z"
    - containerID: cri-o://b1b82a642ae316c72e3ea4ad6872fb5e5edc0ccfe3ae63359478b65a9152ca91
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b1b82a642ae316c72e3ea4ad6872fb5e5edc0ccfe3ae63359478b65a9152ca91
          exitCode: 0
          finishedAt: "2025-02-03T09:25:59Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:59Z"
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:25:21Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: c74db9d7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b8182e8-5514-4e94-9ef4-413f37e0790c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:25:56Z"
    name: multus-additional-cni-plugins-hpx5v
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 2b8182e8-5514-4e94-9ef4-413f37e0790c
    resourceVersion: "6299"
    uid: e0dc9be8-fdb8-43fa-afa8-08cfcaac5cee
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-2.openshift.local
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p26vc
        readOnly: true
    nodeName: master-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-p26vc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://84d3ce63af8e6f0f7cba1d30411219568acd1e19f2005aa221939828d56c96fc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:25:55Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    initContainerStatuses:
    - containerID: cri-o://f03632b0e398d67c63d04b17ada5c098bbe6431bbbcfac341c55fb0f034cbf2c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f03632b0e398d67c63d04b17ada5c098bbe6431bbbcfac341c55fb0f034cbf2c
          exitCode: 0
          finishedAt: "2025-02-03T09:25:26Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:26Z"
    - containerID: cri-o://00a002753bf115d1e49e0395d42ccfbcd33266a8fcce030c545f76f46ce3231e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://00a002753bf115d1e49e0395d42ccfbcd33266a8fcce030c545f76f46ce3231e
          exitCode: 0
          finishedAt: "2025-02-03T09:25:35Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:35Z"
    - containerID: cri-o://86f59772f837bfd7dae908126be46dd7778749498cb2a0dfda35c281eb963e98
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://86f59772f837bfd7dae908126be46dd7778749498cb2a0dfda35c281eb963e98
          exitCode: 0
          finishedAt: "2025-02-03T09:25:39Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:39Z"
    - containerID: cri-o://78ad6726793405a222839e74dcaa83480207d780315e436bc33b77709b1db494
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://78ad6726793405a222839e74dcaa83480207d780315e436bc33b77709b1db494
          exitCode: 0
          finishedAt: "2025-02-03T09:25:43Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:43Z"
    - containerID: cri-o://e0a6230830c9ec1e05c56e997642721328138b180ba8ca80dfc6011f5318988d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e0a6230830c9ec1e05c56e997642721328138b180ba8ca80dfc6011f5318988d
          exitCode: 0
          finishedAt: "2025-02-03T09:25:53Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:53Z"
    - containerID: cri-o://5fda03d5ee8dc6be1ce30b6bfde15cd2438aee756cb70bbf48ec6cbd821490a0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://5fda03d5ee8dc6be1ce30b6bfde15cd2438aee756cb70bbf48ec6cbd821490a0
          exitCode: 0
          finishedAt: "2025-02-03T09:25:54Z"
          reason: Completed
          startedAt: "2025-02-03T09:25:54Z"
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:40:19Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: c74db9d7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b8182e8-5514-4e94-9ef4-413f37e0790c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:35Z"
    name: multus-additional-cni-plugins-nr42g
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 2b8182e8-5514-4e94-9ef4-413f37e0790c
    resourceVersion: "22172"
    uid: c474d2d1-d6b7-4914-8829-4e326f737c55
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-2.openshift.local
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wsr
        readOnly: true
    nodeName: worker-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-q9wsr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e98c03189a31921e761d1ac5250544744dc279f9e0b3d9f413b2a740e8171264
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:34Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    initContainerStatuses:
    - containerID: cri-o://1e0896d26ce0837c009c536c252621cbe8add6046669fe701219c3aa5f205dda
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://1e0896d26ce0837c009c536c252621cbe8add6046669fe701219c3aa5f205dda
          exitCode: 0
          finishedAt: "2025-02-03T09:41:09Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:09Z"
    - containerID: cri-o://c41e72d8173a893330a5d40adc25ac3afa947b28858bb952c32b821e156a112e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c41e72d8173a893330a5d40adc25ac3afa947b28858bb952c32b821e156a112e
          exitCode: 0
          finishedAt: "2025-02-03T09:41:17Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:17Z"
    - containerID: cri-o://721fcc7107d666c6e1f10df3f8b8b89cf3fbe389dfa085d5f31d2e7134e43b66
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://721fcc7107d666c6e1f10df3f8b8b89cf3fbe389dfa085d5f31d2e7134e43b66
          exitCode: 0
          finishedAt: "2025-02-03T09:41:22Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:22Z"
    - containerID: cri-o://8d020f958e0c93f13b57fef36d1f4e285e18557913104ad8d7a66b1c147602e3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8d020f958e0c93f13b57fef36d1f4e285e18557913104ad8d7a66b1c147602e3
          exitCode: 0
          finishedAt: "2025-02-03T09:41:25Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:25Z"
    - containerID: cri-o://88dde29d442de00534dc452424622390840fbf677e8ac7446366e831da45ed01
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://88dde29d442de00534dc452424622390840fbf677e8ac7446366e831da45ed01
          exitCode: 0
          finishedAt: "2025-02-03T09:41:32Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:32Z"
    - containerID: cri-o://49fd3c1eaba621ee7021249be19c210d5f2aafc65ae88b425b831cbc319ee6a3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://49fd3c1eaba621ee7021249be19c210d5f2aafc65ae88b425b831cbc319ee6a3
          exitCode: 0
          finishedAt: "2025-02-03T09:41:33Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:33Z"
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:40:17Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: c74db9d7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b8182e8-5514-4e94-9ef4-413f37e0790c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:14Z"
    name: multus-additional-cni-plugins-t94zk
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 2b8182e8-5514-4e94-9ef4-413f37e0790c
    resourceVersion: "21491"
    uid: e1726caf-7aac-448b-a5d3-1e350f1a9ed0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-1.openshift.local
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4ll5
        readOnly: true
    nodeName: worker-1.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-w4ll5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6f657fbbacfd0bd81c84350aedb307a250bad6fa919bc1b2063c771341db76fb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:13Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    initContainerStatuses:
    - containerID: cri-o://3eb135dde5f2806765cb58acb53463a5a1120c1e747ed9b7fa87b9fe90116ed0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1a32fcb1702a21af396d4aa2cd86a6aec8e4d7cef791f01224a7dcd3dff3192a
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://3eb135dde5f2806765cb58acb53463a5a1120c1e747ed9b7fa87b9fe90116ed0
          exitCode: 0
          finishedAt: "2025-02-03T09:40:43Z"
          reason: Completed
          startedAt: "2025-02-03T09:40:43Z"
    - containerID: cri-o://60c21e09b4b2e5b0d21226c38ab7c074bfa4b23f0088369357e410dd655b0b83
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:102b3a3bb31643c01dfcd9583a3f2fe0c80a0bd3fef947b4c2e7e60c5e5841e8
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://60c21e09b4b2e5b0d21226c38ab7c074bfa4b23f0088369357e410dd655b0b83
          exitCode: 0
          finishedAt: "2025-02-03T09:40:55Z"
          reason: Completed
          startedAt: "2025-02-03T09:40:55Z"
    - containerID: cri-o://918c7e5f1821833ca012a99ac93c331a015ea531ceaef2fea301ac7010e1fcde
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d36a5db4f45952a89fd8b7131e43a432c98a0f9774691fcdfc550aba94bfa23f
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://918c7e5f1821833ca012a99ac93c331a015ea531ceaef2fea301ac7010e1fcde
          exitCode: 0
          finishedAt: "2025-02-03T09:41:00Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:00Z"
    - containerID: cri-o://46581285719c5e2e15404d8c5faae761108791ec5ee07325e3c6dcbbd52d119d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0de3172cf939310872fcc958a0ebc65e2d8442e3e12646ab33384b395224384f
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://46581285719c5e2e15404d8c5faae761108791ec5ee07325e3c6dcbbd52d119d
          exitCode: 0
          finishedAt: "2025-02-03T09:41:04Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:04Z"
    - containerID: cri-o://d183c59ac671c9c7ec7b0d38ec70ba685843135b19a79d7eb97aff075e881f8a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d183c59ac671c9c7ec7b0d38ec70ba685843135b19a79d7eb97aff075e881f8a
          exitCode: 0
          finishedAt: "2025-02-03T09:41:11Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:11Z"
    - containerID: cri-o://f09eba1711efd4fc4900d3dd435e09a677f262cb30a806e1f99e9d008292c6d9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee99c6cb4714f49488a87823c81a9f40a7db9ee78424c022936a463e780afc63
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f09eba1711efd4fc4900d3dd435e09a677f262cb30a806e1f99e9d008292c6d9
          exitCode: 0
          finishedAt: "2025-02-03T09:41:12Z"
          reason: Completed
          startedAt: "2025-02-03T09:41:12Z"
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:80:00:13","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:80:00:13",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-03T09:28:12Z"
    generateName: multus-admission-controller-75968f7c47-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 75968f7c47
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bcdae02b-7c7f-4764-a1d5-6c76951538e0"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:28:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: master-0.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:28:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:28:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:28:20Z"
    name: multus-admission-controller-75968f7c47-554fb
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-75968f7c47
      uid: bcdae02b-7c7f-4764-a1d5-6c76951538e0
    resourceVersion: "12039"
    uid: 824ee2ab-86b9-416d-8bf1-6132c8493495
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=127.0.0.1 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14273c52953887916e3a2f27dd7cb82444175009e6c0ec908ab4636cdebd1793
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75s8p
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75s8p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-0.openshift.local
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-75s8p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1e46e9889694028502e1020d8882560cec63301d66a91a6f6d5f172366c7c19f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:28:19Z"
    - containerID: cri-o://a480f2ddcf668955d1953df9d44c58aee19907c131e84c05f340bfd076267085
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14273c52953887916e3a2f27dd7cb82444175009e6c0ec908ab4636cdebd1793
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14273c52953887916e3a2f27dd7cb82444175009e6c0ec908ab4636cdebd1793
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:28:18Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:28:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:81:00:28","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:81:00:28",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-03T09:28:10Z"
    generateName: multus-admission-controller-75968f7c47-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 75968f7c47
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bcdae02b-7c7f-4764-a1d5-6c76951538e0"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:28:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: master-1.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:28:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:28:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:28:11Z"
    name: multus-admission-controller-75968f7c47-fzrvb
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-75968f7c47
      uid: bcdae02b-7c7f-4764-a1d5-6c76951538e0
    resourceVersion: "11809"
    uid: f0332524-4e8d-4468-841e-0f12c6846de8
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=127.0.0.1 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14273c52953887916e3a2f27dd7cb82444175009e6c0ec908ab4636cdebd1793
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwctr
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwctr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-1.openshift.local
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-pwctr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:28:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4c24bdf432a8aad7f79222ddc0e61370fc0958fe1a7f0a6af5926f742b3980fb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:28:11Z"
    - containerID: cri-o://5255d54f4bf0a1148a8620780b7df4488fa55516d731e82367e00c40b422112a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14273c52953887916e3a2f27dd7cb82444175009e6c0ec908ab4636cdebd1793
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14273c52953887916e3a2f27dd7cb82444175009e6c0ec908ab4636cdebd1793
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:28:11Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:28:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:25:21Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 55c7bbf8f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b51f2437-81f7-4fef-bd4f-1bb6356f0a8a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:26:11Z"
    name: multus-btg47
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: b51f2437-81f7-4fef-bd4f-1bb6356f0a8a
    resourceVersion: "6785"
    uid: effe6161-3186-4888-a616-844d3513de9d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-1.openshift.local
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h8gj4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: master-1.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-h8gj4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b4626323b37ebe5d3e11fd094da4e0fc3b3925b1ff8acf3fa8bb4fa5334adf6f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState:
        terminated:
          containerID: cri-o://596c6ac804e7db1a5fa5b4db8f8d94beff702221486a949bbfcbe554d9003c81
          exitCode: 2
          finishedAt: "2025-02-03T09:26:09Z"
          message: |
            71cf9d75bb\"}],\"ips\":[{\"address\":\"127.0.0.1/23\",\"gateway\":\"127.0.0.1\",\"interface\":1}]}}", err: <nil>
            2025-02-03T09:26:09Z [verbose] ADD starting CNI request ContainerID:"a57bbf984015671a603a8b23b86ef7c7a373ca87c328d77b7fa9408c896415e3" Netns:"/var/run/netns/df8aa226-3a12-4ebe-99c4-fb5ad94d5780" IfName:"eth0" Args:"IgnoreUnknown=1;K8S_POD_NAMESPACE=openshift-kube-storage-version-migrator-operator;K8S_POD_NAME=kube-storage-version-migrator-operator-764c79485f-tc7c7;K8S_POD_INFRA_CONTAINER_ID=a57bbf984015671a603a8b23b86ef7c7a373ca87c328d77b7fa9408c896415e3;K8S_POD_UID=b89808ff-0b89-4010-bb49-dffc8c78c6d0" Path:""
            2025-02-03T09:26:09Z [verbose] ADD starting CNI request ContainerID:"df359e8990eaa481d3d75b50ae14d8fc2133b4daa100d52ddab931121dd4bddb" Netns:"/var/run/netns/f859e3ee-b326-4134-b60a-f8005a277f02" IfName:"eth0" Args:"IgnoreUnknown=1;K8S_POD_NAMESPACE=openshift-apiserver-operator;K8S_POD_NAME=openshift-apiserver-operator-cf8d4b87b-l9ljz;K8S_POD_INFRA_CONTAINER_ID=df359e8990eaa481d3d75b50ae14d8fc2133b4daa100d52ddab931121dd4bddb;K8S_POD_UID=f0f5db3f-a454-4f9d-9f89-66c84a996bf1" Path:""
            2025-02-03T09:26:09Z [verbose] Add: openshift-authentication-operator:authentication-operator-7786c8c77b-mzpsj:7bcb45ff-2505-4b98-aec3-7ce03d27f904:ovn-kubernetes(ovn-kubernetes):eth0 {"cniVersion":"0.4.0","interfaces":[{"name":"0c7800896bcbbec","mac":"3e:14:92:0c:03:91"},{"name":"eth0","mac":"0a:58:0a:81:00:12","sandbox":"/var/run/netns/ceabba5a-5055-4deb-aad5-0af788cbb2cf"}],"ips":[{"version":"4","interface":1,"address":"127.0.0.1/23","gateway":"127.0.0.1"}],"dns":{}}
            I0203 09:26:09.558274    8698 event.go:364] Event(v1.ObjectReference{Kind:"Pod", Namespace:"openshift-authentication-operator", Name:"authentication-operator-7786c8c77b-mzpsj", UID:"7bcb45ff-2505-4b98-aec3-7ce03d27f904", APIVersion:"v1", ResourceVersion:"6544", FieldPath:""}): type: 'Normal' reason: 'AddedInterface' Add eth0 [127.0.0.1/23] from ovn-kubernetes
            2025-02-03T09:26:09Z [verbose] readiness indicator file is gone. restart multus-daemon
          reason: Error
          startedAt: "2025-02-03T09:25:36Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:26:10Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:40:19Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 55c7bbf8f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b51f2437-81f7-4fef-bd4f-1bb6356f0a8a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:10Z"
    name: multus-j9fx2
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: b51f2437-81f7-4fef-bd4f-1bb6356f0a8a
    resourceVersion: "21407"
    uid: 03ff075a-4b42-4c44-804a-773d00ff884f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-2.openshift.local
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2k9rh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: worker-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-2k9rh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9f925c43d0d2e44ecfcbd9b24003a98f3ef223ef4474e248cd37deea980e3196
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:09Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-03T09:25:21Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 55c7bbf8f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b51f2437-81f7-4fef-bd4f-1bb6356f0a8a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:26:32Z"
    name: multus-l6rj4
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: b51f2437-81f7-4fef-bd4f-1bb6356f0a8a
    resourceVersion: "8025"
    uid: 46d076fb-c919-4d4a-85a1-754559774e40
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-0.openshift.local
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.openshift.local
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9llt6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: master-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-9llt6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:26:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9f27e96f9f8a4b7f1b4068f56d68d1756a64d858a3528b74fcdf846afa0feb21
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a56af35db208577842cf5a8f48977912b412d4ef3f22a3e8652c1721bb39ad66
      lastState:
        terminated:
          containerID: cri-o://92116e06c5ed82e5438b093b21140bbf2cd7639be565774b20d8cbfd4785fbc4
          exitCode: 2
          finishedAt: "2025-02-03T09:26:31Z"
          message: |
            2dc86bb9ff7c7f25023e7e7b9359f4258b74b19b" Netns:"/var/run/netns/4248828b-77cb-46dd-bf7d-372d1cd070e1" IfName:"eth0" Args:"IgnoreUnknown=1;K8S_POD_NAMESPACE=openshift-service-ca;K8S_POD_NAME=service-ca-5f74b7b968-qdwtt;K8S_POD_INFRA_CONTAINER_ID=794ad1c81ce069e5e74a427e2dc86bb9ff7c7f25023e7e7b9359f4258b74b19b;K8S_POD_UID=375b1d1f-e23c-493d-9cae-1f7ed991db07" Path:""
            2025-02-03T09:26:22Z [verbose] Add: openshift-service-ca:service-ca-5f74b7b968-qdwtt:375b1d1f-e23c-493d-9cae-1f7ed991db07:ovn-kubernetes(ovn-kubernetes):eth0 {"cniVersion":"0.4.0","interfaces":[{"name":"794ad1c81ce069e","mac":"e6:68:13:03:cc:f1"},{"name":"eth0","mac":"0a:58:0a:80:00:05","sandbox":"/var/run/netns/4248828b-77cb-46dd-bf7d-372d1cd070e1"}],"ips":[{"version":"4","interface":1,"address":"127.0.0.1/23","gateway":"127.0.0.1"}],"dns":{}}
            I0203 09:26:22.548378    8174 event.go:364] Event(v1.ObjectReference{Kind:"Pod", Namespace:"openshift-service-ca", Name:"service-ca-5f74b7b968-qdwtt", UID:"375b1d1f-e23c-493d-9cae-1f7ed991db07", APIVersion:"v1", ResourceVersion:"7192", FieldPath:""}): type: 'Normal' reason: 'AddedInterface' Add eth0 [127.0.0.1/23] from ovn-kubernetes
            2025-02-03T09:26:22Z [verbose] ADD finished CNI request ContainerID:"794ad1c81ce069e5e74a427e2dc86bb9ff7c7f25023e7e7b9359f4258b74b19b" Netns:"/var/run/netns/4248828b-77cb-46dd-bf7d-372d1cd070e1" IfName:"eth0" Args:"IgnoreUnknown=1;K8S_POD_NAMESPACE=openshift-service-ca;K8S_POD_NAME=service-ca-5f74b7b968-qdwtt;K8S_POD_INFRA_CONTAINER_ID=794ad1c81ce069e5e74a427e2dc86bb9ff7c7f25023e7e7b9359f4258b74b19b;K8S_POD_UID=375b1d1f-e23c-493d-9cae-1f7ed991db07" Path:"", result: "{\"Result\":{\"cniVersion\":\"1.1.0\",\"interfaces\":[{\"mac\":\"e6:68:13:03:cc:f1\",\"name\":\"794ad1c81ce069e\"},{\"mac\":\"0a:58:0a:80:00:05\",\"name\":\"eth0\",\"sandbox\":\"/var/run/netns/4248828b-77cb-46dd-bf7d-372d1cd070e1\"}],\"ips\":[{\"address\":\"127.0.0.1/23\",\"gateway\":\"127.0.0.1\",\"interface\":1}]}}", err: <nil>
            2025-02-03T09:26:31Z [verbose] readiness indicator file is gone. restart multus-daemon
          reason: Error
          startedAt: "2025-02-03T09:25:36Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:26:31Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:81:00:04","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:81:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-03T09:25:22Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59c89b94bf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a46f1a0-de2b-423d-825e-790b47e67f86"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:25:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: master-1.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:25:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:27:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:27:34Z"
    name: network-metrics-daemon-489hj
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 6a46f1a0-de2b-423d-825e-790b47e67f86
    resourceVersion: "11246"
    uid: 003dd87e-47c2-4e7b-8229-b8c76f3db1ca
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-1.openshift.local
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rgf5n
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rgf5n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-1.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-rgf5n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:27:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:27:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:27:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:25:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f3d2029debc720ad9a7c37b46d44c5919c373930035490b00bc692bcba589471
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:27:34Z"
    - containerID: cri-o://ebf3778a39677aa34c18ab3045246743e3514f74499d0b4c680526da839365c5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:27:33Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:25:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:83:00:04","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:83:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-03T09:40:13Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59c89b94bf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a46f1a0-de2b-423d-825e-790b47e67f86"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: worker-0.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:40:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:41Z"
    name: network-metrics-daemon-7n4k7
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 6a46f1a0-de2b-423d-825e-790b47e67f86
    resourceVersion: "22413"
    uid: 93552593-a752-4119-9a99-f719eeba6cc5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-0.openshift.local
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k8zvp
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k8zvp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-k8zvp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f8933e55ce669f8b53a77439a7357cf8882dd88c0481823c7440448aea694f52
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:40Z"
    - containerID: cri-o://b70c77a4255ded8baaf117a05b7d57e949ec0a28b1e5bea8232c3cf2de44130f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:40Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:81:02:03","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:81:02:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-03T09:40:19Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59c89b94bf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a46f1a0-de2b-423d-825e-790b47e67f86"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: worker-2.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:42:01Z"
    name: network-metrics-daemon-k9jqg
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 6a46f1a0-de2b-423d-825e-790b47e67f86
    resourceVersion: "23693"
    uid: a2a405cb-f0ff-462c-9137-0bcb1e578a39
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-2.openshift.local
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gd6ml
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gd6ml
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-gd6ml
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:42:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:42:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:42:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://80c0d9419ea2c13a32e7d4976f8996ee7df4a101e6892e74bd55b0b8a74499c3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:42:00Z"
    - containerID: cri-o://e7ff4be9cded5820329fc170319c2d47563285f50634447656e6fe17830d4b4d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:42:00Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:80:01:f4","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
    creationTimestamp: "2025-02-24T09:15:24Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59c89b94bf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a46f1a0-de2b-423d-825e-790b47e67f86"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-24T09:15:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: master-0.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-24T09:15:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:message: {}
          f:phase: {}
          f:qosClass: {}
          f:reason: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-24T09:15:26Z"
    name: network-metrics-daemon-l5lr4
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 6a46f1a0-de2b-423d-825e-790b47e67f86
    resourceVersion: "11223921"
    uid: bd046ab4-e0ff-4db0-94ec-f77b4e0364b5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-0.openshift.local
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8hv7
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8hv7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-8qsww
    nodeName: master-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-c8hv7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: ""
      lastState: {}
      name: kube-rbac-proxy
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          exitCode: 137
          finishedAt: null
          message: The container could not be located when the pod was terminated
          reason: ContainerStatusUnknown
          startedAt: null
    - image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imageID: ""
      lastState: {}
      name: network-metrics-daemon
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          exitCode: 137
          finishedAt: null
          message: The container could not be located when the pod was terminated
          reason: ContainerStatusUnknown
          startedAt: null
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    message: 'Pod was rejected: The node had condition: [DiskPressure]. '
    phase: Failed
    qosClass: Burstable
    reason: Evicted
    startTime: "2025-02-24T09:15:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:82:01:ac","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:82:01:ac",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-24T09:15:24Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59c89b94bf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a46f1a0-de2b-423d-825e-790b47e67f86"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-24T09:15:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: master-2.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-24T09:15:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-24T09:15:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-24T09:15:29Z"
    name: network-metrics-daemon-mrgrr
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 6a46f1a0-de2b-423d-825e-790b47e67f86
    resourceVersion: "11223991"
    uid: 06761c8f-87ef-4b26-823f-97dc04ae4533
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master-2.openshift.local
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg6qw
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg6qw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-8qsww
    nodeName: master-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-wg6qw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T09:15:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f4026654feedcff981cdaddeab44adfdedc7cff47a760527fbeb57f89c9e7fcc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-24T09:15:29Z"
    - containerID: cri-o://f22ede852488a3d9b6a098c89fac7caea59828f4df9d34f4b85c669830561465
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-24T09:15:28Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-24T09:15:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:80:02:04","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:80:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-02-03T09:40:17Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59c89b94bf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a46f1a0-de2b-423d-825e-790b47e67f86"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:40:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: worker-1.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:40:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:41:40Z"
    name: network-metrics-daemon-prss9
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 6a46f1a0-de2b-423d-825e-790b47e67f86
    resourceVersion: "22395"
    uid: 6b8517c6-b989-453e-bb5f-58319581c2d5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-1.openshift.local
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2whk
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2whk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-s2whk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:41:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://56fd0662738469e8fc8056f3368804761b395e488ef22a3eca47c0daf4234fca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:336d5f09ef32e91f592ad178fae9dfdc8e0292d3802aa4f6ecc5488623527fd8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:40Z"
    - containerID: cri-o://a6c11c0a12114b9acbdeda4c97910c5388473691602d6e13d32c7d1dc20b06d3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5f0fb7e74137c77a16643a8a08b4e837fda0e41d1c225a2d0864deecd43f04f
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:41:40Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:40:32Z"
kind: PodList
metadata:
  resourceVersion: "11224012"
