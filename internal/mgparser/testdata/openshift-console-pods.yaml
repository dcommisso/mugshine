---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      console.openshift.io/authn-ca-trust-config-version: "19374"
      console.openshift.io/console-config-version: "25155"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      console.openshift.io/infrastructure-config-version: "419"
      console.openshift.io/oauth-secret-version: "19391"
      console.openshift.io/proxy-config-version: "523"
      console.openshift.io/service-ca-config-version: "21986"
      console.openshift.io/trusted-ca-config-version: "21992"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:82:00:31","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:82:00:31",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-02-03T09:43:45Z"
    generateName: console-f7996d89c-
    labels:
      app: console
      component: ui
      pod-template-hash: f7996d89c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:console.openshift.io/authn-ca-trust-config-version: {}
            f:console.openshift.io/console-config-version: {}
            f:console.openshift.io/image: {}
            f:console.openshift.io/infrastructure-config-version: {}
            f:console.openshift.io/oauth-secret-version: {}
            f:console.openshift.io/proxy-config-version: {}
            f:console.openshift.io/service-ca-config-version: {}
            f:console.openshift.io/trusted-ca-config-version: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ce35125b-0315-4266-b012-188fc98941a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"console"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/console-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/oauth-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/oauth-serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/service-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"console-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"console-oauth-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"console-serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"oauth-serving-cert"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"service-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:43:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-02-03T09:43:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: master-2.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:45:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:45:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:46:05Z"
    name: console-f7996d89c-bczrn
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: console-f7996d89c
      uid: ce35125b-0315-4266-b012-188fc98941a8
    resourceVersion: "26249"
    uid: 44aa85d6-7d02-47ee-b43c-d151b3298e72
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - ui
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /opt/bridge/bin/bridge
      - --public-dir=/opt/bridge/static
      - --config=/var/console-config/console-config.yaml
      - --service-ca-file=/var/service-ca/service-ca.crt
      - --v=2
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - sleep
            - "25"
      livenessProbe:
        failureThreshold: 1
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: console
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsUser: 1000660000
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/serving-cert
        name: console-serving-cert
        readOnly: true
      - mountPath: /var/oauth-config
        name: console-oauth-config
        readOnly: true
      - mountPath: /var/console-config
        name: console-config
        readOnly: true
      - mountPath: /var/service-ca
        name: service-ca
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca-bundle
        readOnly: true
      - mountPath: /var/oauth-serving-cert
        name: oauth-serving-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djl9j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-2.openshift.local
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000660000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c26,c5
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: console
    serviceAccountName: console
    terminationGracePeriodSeconds: 40
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: console-serving-cert
      secret:
        defaultMode: 420
        secretName: console-serving-cert
    - name: console-oauth-config
      secret:
        defaultMode: 420
        secretName: console-oauth-config
    - configMap:
        defaultMode: 420
        name: console-config
      name: console-config
    - configMap:
        defaultMode: 420
        name: service-ca
      name: service-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
      name: trusted-ca-bundle
    - configMap:
        defaultMode: 420
        name: oauth-serving-cert
      name: oauth-serving-cert
    - name: kube-api-access-djl9j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:46:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:46:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://36dfd63328f7e661a3642128a8405f1a92beda50f0303a39620fb8fd2b5e256a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      lastState: {}
      name: console
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:45:06Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:45:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      console.openshift.io/authn-ca-trust-config-version: "19374"
      console.openshift.io/console-config-version: "25155"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      console.openshift.io/infrastructure-config-version: "419"
      console.openshift.io/oauth-secret-version: "19391"
      console.openshift.io/proxy-config-version: "523"
      console.openshift.io/service-ca-config-version: "21986"
      console.openshift.io/trusted-ca-config-version: "21992"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:81:00:4a","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:81:00:4a",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-02-03T09:43:45Z"
    generateName: console-f7996d89c-
    labels:
      app: console
      component: ui
      pod-template-hash: f7996d89c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:console.openshift.io/authn-ca-trust-config-version: {}
            f:console.openshift.io/console-config-version: {}
            f:console.openshift.io/image: {}
            f:console.openshift.io/infrastructure-config-version: {}
            f:console.openshift.io/oauth-secret-version: {}
            f:console.openshift.io/proxy-config-version: {}
            f:console.openshift.io/service-ca-config-version: {}
            f:console.openshift.io/trusted-ca-config-version: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ce35125b-0315-4266-b012-188fc98941a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"console"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/console-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/oauth-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/oauth-serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/service-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"console-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"console-oauth-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"console-serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"oauth-serving-cert"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"service-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:43:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-02-03T09:43:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: master-1.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:45:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:45:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:45:33Z"
    name: console-f7996d89c-dfmkb
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: console-f7996d89c
      uid: ce35125b-0315-4266-b012-188fc98941a8
    resourceVersion: "25990"
    uid: 16b7598e-264a-43ac-beda-833955aec475
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - ui
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /opt/bridge/bin/bridge
      - --public-dir=/opt/bridge/static
      - --config=/var/console-config/console-config.yaml
      - --service-ca-file=/var/service-ca/service-ca.crt
      - --v=2
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - sleep
            - "25"
      livenessProbe:
        failureThreshold: 1
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: console
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsUser: 1000660000
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/serving-cert
        name: console-serving-cert
        readOnly: true
      - mountPath: /var/oauth-config
        name: console-oauth-config
        readOnly: true
      - mountPath: /var/console-config
        name: console-config
        readOnly: true
      - mountPath: /var/service-ca
        name: service-ca
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca-bundle
        readOnly: true
      - mountPath: /var/oauth-serving-cert
        name: oauth-serving-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t9ffr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-1.openshift.local
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000660000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c26,c5
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: console
    serviceAccountName: console
    terminationGracePeriodSeconds: 40
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: console-serving-cert
      secret:
        defaultMode: 420
        secretName: console-serving-cert
    - name: console-oauth-config
      secret:
        defaultMode: 420
        secretName: console-oauth-config
    - configMap:
        defaultMode: 420
        name: console-config
      name: console-config
    - configMap:
        defaultMode: 420
        name: service-ca
      name: service-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
      name: trusted-ca-bundle
    - configMap:
        defaultMode: 420
        name: oauth-serving-cert
      name: oauth-serving-cert
    - name: kube-api-access-t9ffr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:45:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://79eb4bc1deebc9febbc6fb1dd4659d7cf7d2f63caf6563b9a737c34ee3e82b61
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2757232e378760ab4f5224a3096f11e9d3224af457bc70a8d6adda7e1f6f636e
      lastState: {}
      name: console
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:45:08Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:45:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:82:00:23","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:82:00:23",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-02-03T09:39:45Z"
    generateName: downloads-6695495869-
    labels:
      app: console
      component: downloads
      pod-template-hash: "6695495869"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b0503615-16b1-43e5-9be5-9ad59cd7151c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"download-server"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:39:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: master-2.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:39:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:39:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:40:35Z"
    name: downloads-6695495869-6zwm9
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: downloads-6695495869
      uid: b0503615-16b1-43e5-9be5-9ad59cd7151c
    resourceVersion: "20486"
    uid: d2f3e18d-bcd1-4c85-aa13-2780ab447ea4
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - downloads
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - -c
      - "cat <<EOF >>/tmp/serve.py\nimport errno, http.server, os, re, signal, socket,
        sys, tarfile, tempfile, threading, time, zipfile\n\nsignal.signal(signal.SIGTERM,
        lambda signum, frame: sys.exit(0))\n\ndef write_index(path, message):\n  with
        open(path, 'wb') as f:\n    f.write('\\n'.join([\n      '<!doctype html>',\n
        \     '<html lang=\"en\">',\n      '<head>',\n      '  <meta charset=\"utf-8\">',\n
        \     '</head>',\n      '<body>',\n      '  {}'.format(message),\n      '</body>',\n
        \     '</html>',\n      '',\n    ]).encode('utf-8'))\n\n# Launch multiple
        listeners as threads\nclass Thread(threading.Thread):\n  def __init__(self,
        i, socket):\n    threading.Thread.__init__(self)\n    self.i = i\n    self.socket
        = socket\n    self.daemon = True\n    self.start()\n\n  def run(self):\n    server
        = http.server.SimpleHTTPRequestHandler\n    server.server_version = \"OpenShift
        Downloads Server\"\n    server.sys_version = \"\"\n    httpd = http.server.HTTPServer(addr,
        server, False)\n\n    # Prevent the HTTP server from re-binding every handler.\n
        \   # https://stackoverflow.com/questions/46210672/\n    httpd.socket = self.socket\n
        \   httpd.server_bind = self.server_close = lambda self: None\n\n    httpd.serve_forever()\n\ntemp_dir
        = tempfile.mkdtemp()\nprint('serving from {}'.format(temp_dir))\nos.chdir(temp_dir)\nfor
        arch in ['amd64', 'arm64', 'ppc64le', 's390x']:\n  os.mkdir(arch)\ncontent
        = ['<a href=\"oc-license\">license</a>']\nos.symlink('/usr/share/openshift/LICENSE',
        'oc-license')\n\nfor arch, operating_system, path in [\n    ('amd64', 'linux',
        '/usr/share/openshift/linux_amd64/oc'),\n    ('amd64', 'mac', '/usr/share/openshift/mac/oc'),\n
        \   ('amd64', 'windows', '/usr/share/openshift/windows/oc.exe'),\n    ('arm64',
        'linux', '/usr/share/openshift/linux_arm64/oc'),\n    ('arm64', 'mac', '/usr/share/openshift/mac_arm64/oc'),\n
        \   ('ppc64le', 'linux', '/usr/share/openshift/linux_ppc64le/oc'),\n    ('s390x',
        'linux', '/usr/share/openshift/linux_s390x/oc'),\n    ]:\n  basename = os.path.basename(path)\n
        \ target_path = os.path.join(arch, operating_system, basename)\n  os.mkdir(os.path.join(arch,
        operating_system))\n  os.symlink(path, target_path)\n  base_root, _ = os.path.splitext(basename)\n
        \ archive_path_root = os.path.join(arch, operating_system, base_root)\n  with
        tarfile.open('{}.tar'.format(archive_path_root), 'w') as tar:\n    tar.add(path,
        basename)\n  with zipfile.ZipFile('{}.zip'.format(archive_path_root), 'w')
        as zip:\n    zip.write(path, basename)\n  content.append(\n    '<a href=\"{0}\">oc
        ({1} {2})</a> (<a href=\"{3}.tar\">tar</a> <a href=\"{3}.zip\">zip</a>)'.format(\n
        \     target_path, arch, operating_system, archive_path_root\n    )\n  )\n\nfor
        root, directories, filenames in os.walk(temp_dir):\n  root_link = os.path.relpath(temp_dir,
        os.path.join(root, 'child')).replace(os.path.sep, '/')\n  for directory in
        directories:\n    write_index(\n      path=os.path.join(root, directory, 'index.html'),\n
        \     message='<p>Directory listings are disabled.  See <a href=\"{}\">here</a>
        for available content.</p>'.format(root_link),\n    )\n\nwrite_index(\n  path=os.path.join(temp_dir,
        'index.html'),\n  message='\\n'.join(\n    ['<ul>'] +\n    ['  <li>{}</li>'.format(entry)
        for entry in content] +\n    ['</ul>']\n  ),\n)\n\n# Create socket\n# IPv6
        should handle IPv4 passively so long as it is not bound to a\n# specific address
        or set to IPv6_ONLY\n# https://stackoverflow.com/questions/25817848/python-3-does-http-server-support-ipv6\ntry:\n
        \ addr = ('::', 8080)\n  sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\nexcept
        socket.error as err:\n  # errno.EAFNOSUPPORT is \"socket.error: [Errno 97]
        Address family not supported by protocol\"\n  # When IPv6 is disabled, socket
        will bind using IPv4.\n  if err.errno == errno.EAFNOSUPPORT:\n    addr = ('',
        8080)\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n  else:\n
        \   raise    \nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nsock.bind(addr)\nsock.listen(5)\n\n[Thread(i,
        socket=sock) for i in range(100)]\ntime.sleep(9e9)\nEOF\nexec python3 /tmp/serve.py\n"
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fe36f89e93f3fd8e4fe2804a740afaf3e26a01c5a7aac5ff88d23894b0a8ecf
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: download-server
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsUser: 1000660000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lkbn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-2.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000660000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c26,c5
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-8lkbn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:39:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:39:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8ec9cbfed8b831afb7373f8e2d0f34697e2aae2d354c67ef730c18e4a3ed17e3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fe36f89e93f3fd8e4fe2804a740afaf3e26a01c5a7aac5ff88d23894b0a8ecf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fe36f89e93f3fd8e4fe2804a740afaf3e26a01c5a7aac5ff88d23894b0a8ecf
      lastState: {}
      name: download-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:40:23Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:39:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["127.0.0.1/23"],"mac_address":"0a:58:0a:80:00:27","gateway_ips":["127.0.0.1"],"routes":[{"dest":"127.0.0.1/14","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/32","nextHop":"127.0.0.1"},{"dest":"127.0.0.1/16","nextHop":"127.0.0.1"}],"ip_address":"127.0.0.1/23","gateway_ip":"127.0.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "127.0.0.1"
            ],
            "mac": "0a:58:0a:80:00:27",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-02-03T09:39:45Z"
    generateName: downloads-6695495869-
    labels:
      app: console
      component: downloads
      pod-template-hash: "6695495869"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b0503615-16b1-43e5-9be5-9ad59cd7151c"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"download-server"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-02-03T09:39:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: master-0.openshift.local
      operation: Update
      subresource: status
      time: "2025-02-03T09:39:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-02-03T09:39:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"127.0.0.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-02-03T09:40:35Z"
    name: downloads-6695495869-cpwct
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: downloads-6695495869
      uid: b0503615-16b1-43e5-9be5-9ad59cd7151c
    resourceVersion: "20485"
    uid: 6f397766-d848-4edd-b41a-0d517ab8f79f
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - downloads
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - -c
      - "cat <<EOF >>/tmp/serve.py\nimport errno, http.server, os, re, signal, socket,
        sys, tarfile, tempfile, threading, time, zipfile\n\nsignal.signal(signal.SIGTERM,
        lambda signum, frame: sys.exit(0))\n\ndef write_index(path, message):\n  with
        open(path, 'wb') as f:\n    f.write('\\n'.join([\n      '<!doctype html>',\n
        \     '<html lang=\"en\">',\n      '<head>',\n      '  <meta charset=\"utf-8\">',\n
        \     '</head>',\n      '<body>',\n      '  {}'.format(message),\n      '</body>',\n
        \     '</html>',\n      '',\n    ]).encode('utf-8'))\n\n# Launch multiple
        listeners as threads\nclass Thread(threading.Thread):\n  def __init__(self,
        i, socket):\n    threading.Thread.__init__(self)\n    self.i = i\n    self.socket
        = socket\n    self.daemon = True\n    self.start()\n\n  def run(self):\n    server
        = http.server.SimpleHTTPRequestHandler\n    server.server_version = \"OpenShift
        Downloads Server\"\n    server.sys_version = \"\"\n    httpd = http.server.HTTPServer(addr,
        server, False)\n\n    # Prevent the HTTP server from re-binding every handler.\n
        \   # https://stackoverflow.com/questions/46210672/\n    httpd.socket = self.socket\n
        \   httpd.server_bind = self.server_close = lambda self: None\n\n    httpd.serve_forever()\n\ntemp_dir
        = tempfile.mkdtemp()\nprint('serving from {}'.format(temp_dir))\nos.chdir(temp_dir)\nfor
        arch in ['amd64', 'arm64', 'ppc64le', 's390x']:\n  os.mkdir(arch)\ncontent
        = ['<a href=\"oc-license\">license</a>']\nos.symlink('/usr/share/openshift/LICENSE',
        'oc-license')\n\nfor arch, operating_system, path in [\n    ('amd64', 'linux',
        '/usr/share/openshift/linux_amd64/oc'),\n    ('amd64', 'mac', '/usr/share/openshift/mac/oc'),\n
        \   ('amd64', 'windows', '/usr/share/openshift/windows/oc.exe'),\n    ('arm64',
        'linux', '/usr/share/openshift/linux_arm64/oc'),\n    ('arm64', 'mac', '/usr/share/openshift/mac_arm64/oc'),\n
        \   ('ppc64le', 'linux', '/usr/share/openshift/linux_ppc64le/oc'),\n    ('s390x',
        'linux', '/usr/share/openshift/linux_s390x/oc'),\n    ]:\n  basename = os.path.basename(path)\n
        \ target_path = os.path.join(arch, operating_system, basename)\n  os.mkdir(os.path.join(arch,
        operating_system))\n  os.symlink(path, target_path)\n  base_root, _ = os.path.splitext(basename)\n
        \ archive_path_root = os.path.join(arch, operating_system, base_root)\n  with
        tarfile.open('{}.tar'.format(archive_path_root), 'w') as tar:\n    tar.add(path,
        basename)\n  with zipfile.ZipFile('{}.zip'.format(archive_path_root), 'w')
        as zip:\n    zip.write(path, basename)\n  content.append(\n    '<a href=\"{0}\">oc
        ({1} {2})</a> (<a href=\"{3}.tar\">tar</a> <a href=\"{3}.zip\">zip</a>)'.format(\n
        \     target_path, arch, operating_system, archive_path_root\n    )\n  )\n\nfor
        root, directories, filenames in os.walk(temp_dir):\n  root_link = os.path.relpath(temp_dir,
        os.path.join(root, 'child')).replace(os.path.sep, '/')\n  for directory in
        directories:\n    write_index(\n      path=os.path.join(root, directory, 'index.html'),\n
        \     message='<p>Directory listings are disabled.  See <a href=\"{}\">here</a>
        for available content.</p>'.format(root_link),\n    )\n\nwrite_index(\n  path=os.path.join(temp_dir,
        'index.html'),\n  message='\\n'.join(\n    ['<ul>'] +\n    ['  <li>{}</li>'.format(entry)
        for entry in content] +\n    ['</ul>']\n  ),\n)\n\n# Create socket\n# IPv6
        should handle IPv4 passively so long as it is not bound to a\n# specific address
        or set to IPv6_ONLY\n# https://stackoverflow.com/questions/25817848/python-3-does-http-server-support-ipv6\ntry:\n
        \ addr = ('::', 8080)\n  sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\nexcept
        socket.error as err:\n  # errno.EAFNOSUPPORT is \"socket.error: [Errno 97]
        Address family not supported by protocol\"\n  # When IPv6 is disabled, socket
        will bind using IPv4.\n  if err.errno == errno.EAFNOSUPPORT:\n    addr = ('',
        8080)\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n  else:\n
        \   raise    \nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nsock.bind(addr)\nsock.listen(5)\n\n[Thread(i,
        socket=sock) for i in range(100)]\ntime.sleep(9e9)\nEOF\nexec python3 /tmp/serve.py\n"
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fe36f89e93f3fd8e4fe2804a740afaf3e26a01c5a7aac5ff88d23894b0a8ecf
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: download-server
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsUser: 1000660000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6jmsf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-0.openshift.local
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000660000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c26,c5
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-6jmsf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:39:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:40:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-03T09:39:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0d312263afb4fbab54b302886c7b012548a4311df7d06ffeb966e7d91e20f6e9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fe36f89e93f3fd8e4fe2804a740afaf3e26a01c5a7aac5ff88d23894b0a8ecf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fe36f89e93f3fd8e4fe2804a740afaf3e26a01c5a7aac5ff88d23894b0a8ecf
      lastState: {}
      name: download-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-03T09:40:23Z"
    hostIP: 127.0.0.1
    hostIPs:
    - ip: 127.0.0.1
    phase: Running
    podIP: 127.0.0.1
    podIPs:
    - ip: 127.0.0.1
    qosClass: Burstable
    startTime: "2025-02-03T09:39:45Z"
kind: PodList
metadata:
  resourceVersion: "11223286"
